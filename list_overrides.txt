./dir_test/systems/default.nix:225:            qemu-user = pkgs.qemu.override {
./dir_test/tests/misc.nix:54:    expr = functionArgs (makeOverridable ({ a, b, c ? null }: {}) { a = 1; b = 2; }).override;
./dir_test/tests/modules.sh:225:checkConfigOutput '^false$' config.enable ./alias-with-priority-can-override.nix
./dir_test/tests/modules.sh:226:checkConfigOutput '^false$' config.enableAlias ./alias-with-priority-can-override.nix
./dir_test/tests/modules.sh:233:checkConfigOutput '^"pkgs\.hello\.override \{ stdenv = pkgs\.clangStdenv; \}"$' options.packageWithExample.example.text ./declare-mkPackageOption.nix
./dir_test/tests/modules/declare-mkPackageOption.nix:21:      example = "pkgs.hello.override { stdenv = pkgs.clangStdenv; }";
./dir_test/tests/modules/alias-with-priority-can-override.nix:4:# This test shows that an alias with a high priority is able to override
./dir_test/tests/modules/alias-with-priority-can-override.nix:41:    # should override the next import.
./dir_test/customisation.nix:59:     injects `override` attribute which can be used to override arguments of
./dir_test/customisation.nix:71:       { override = «lambda»; overrideDerivation = «lambda»; result = 3; }
./dir_test/customisation.nix:73:       nix-repl> y.override { a = 10; }
./dir_test/customisation.nix:74:       { override = «lambda»; overrideDerivation = «lambda»; result = 12; }
./dir_test/customisation.nix:95:          override = overrideArgs;
./dir_test/customisation.nix:103:          override = overrideArgs;
./dir_test/customisation.nix:194:     set of derivations. The override function is added to the
./dir_test/path/tests/prop.sh:29:# Defaulting to a random seed but the first argument can override this
./dir_test/attrsets.nix:214:              # If we do have a value and it's an attribute set, override it
./dir_test/attrsets.nix:926:    # Attribute set with attributes to override in `old`.
./dir_test/deprecated.nix:32:          override = base.passthru.function;
./dir_test/deprecated.nix:223:  # in these cases the first buildPhase will override the second one
./dir_test/modules.nix:257:          # paths, meaning recursiveUpdate will never override any value
./dir_test/modules.nix:340:          else if m._type == "if" || m._type == "override" then
./dir_test/modules.nix:879:    else if cfg._type or "" == "override" then
./dir_test/modules.nix:931:      getPrio = def: if def.value._type or "" == "override" then def.value.priority else defaultOverridePriority;
./dir_test/modules.nix:933:      strip = def: if def.value._type or "" == "override" then def // { value = def.value.content; } else def;
./dir_test/modules.nix:1013:    { _type = "override";
./dir_test/modules.nix:1020:  mkImageMediaOverride = mkOverride 60; # image media profiles can be derived by inclusion into host config, hence needing to override host config, but do allow user to mkForce
./dir_test/meta.nix:9:  /* Add to or override the meta attributes of the given
./.git/hooks/push-to-checkout.sample:15:# of the branch. This hook is to be used to override the default
